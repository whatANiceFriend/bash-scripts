#!/bin/bash

set -u
set -o pipefail

# --------------------------------------------------------------------------- #
#				VARIABLE DEFINITIONS
# --------------------------------------------------------------------------- #

image_name='http_img'
container_name='httpd'

# --------------------------------------------------------------------------- #
#				FUNCTIONS
# --------------------------------------------------------------------------- #

error_out() {
	echo "Action is not successful: ${1}"
	exit 1
}

say() {
	echo "...................................................."
	echo "${1}"
	echo "...................................................."
}

build_container() {
	say "building image"

	podman build -t "$image_name" /home/jo/.

	if [ ${?} -ne 0 ]; then
		error_out 'build failed'
	fi
}

run_container() {
	say "running container"

	podman ps | grep "$container_name"
		
	if [ ! ${?} -eq 0 ]; then

		podman run -d --name "$container_name" localhost/httpd_img

		if [ ${?} -ne 0 ]; then
			error_out 'run failed'
		fi
	fi
}

log_container() {
	say "printing logs"

	podman ps | grep "$container_name"
		
	if [ ${?} -eq 0 ]; then
		podman logs "$container_name"
		if [ ${?} -ne 0 ]; then
			error_out 'log failed'
		fi
	else 
		echo "Container is not found"
	fi

}

kill_container() {
	podman ps | grep "$container_name"

	if [ ${?} -eq 0 ]; then
		podman stop "$container_name"
		podman rm "$container_name"
	else
		echo "There is no active container running"
	fi
}

# --------------------------------------------------------------------------- #
#				MAIN LOGIC
# --------------------------------------------------------------------------- #

if [ "${1:-none}" == "none" ] ; then
	echo 'Run with build, run, or log'
	exit 1
fi

if [ ! -f /home/jo/Containerfile ]; then 
	echo "Containerfile doesn't exsit"
	exit 1
fi

if [ "$1" == "build-and-run" ]; then
	build_container
	run_container
	log_container
elif [ "$1" == "build" ]; then
	build_container
elif [ "$1" == "run" ]; then
	run_container
elif [ "$1" == "log" ]; then
	log_container
elif [ "$1" == "kill" ]; then
	kill_container
fi

exit 0
